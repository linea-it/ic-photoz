README::
--------------------------------------------------------------------------
For methods that calculate single-number photo-z's, the output files should be ascii format,
with the following 5 columns:
photo-z
1-sigma photo-z error
true redshift
field_id (from original validation set file)
number (from original validation set file)
--------------------------------------------------------------------------
For methods that calculate p(z), the output files should be ascii format and the
filename MUST END WITH '.pz' so the code recognize it as a p(z) file. The structure is as given on the
wiki:

First row of file gives N, the number of p(z) bins, followed by the center redshifts of each p(z) bin.
The number of bins, N, can be arbitrary, but the redshift bin spacing has to be a constant.
The p(z) values should sum to one.
Subsequent rows correspond to one galaxy per row and consist of the following quantities:
true redshift
field_id (from original validation set file)
number (from original validation set file)
the N p(z) values
------------------------------------------------------------------------------------
CODE:

Requirements:
python
python modules:
numpy
matplotlib
scipy
All free distributions, best option installed through entought https://www.enthought.com/

The photo-z metrics will be the same as in the DC6_Photo-z_Challenge.

to run it from the terminal:
$ ./plot_des_results.py <options>
options:
-h help
--t1 <test file 1>
--v1 <validation file 1> optional (if not given it returns 0s for cross metrics)
--err1 <error cut 1> optional
--t2 <test file 2> to compare with different code/ run/weights
--v2 <validation file 2> same as before
--err2 <error cut 2>
--output <output root> for test files results
--name1 <name1> name for test 1, default=Test 1
--name2 <name2> name for test 2, default=Test 2
--w1 <weights file> weights for test 1, default = no weights
--w2 <weights file> weights for test 2, default = no weights, if same file must repeat file name
--frac1 <fraction between 0 and 1 of best selected galaxies (smallest errors)  test 1>, if used --err1 is ignored
--frac2 <fraction between 0 and 1 of best selected galaxies (smallest errors)  test 2>, if used --err2 is ignored

The order is not important and the files using P(z) should have the extension '.pz' at the end

A summary of the results are shown on screen, for all the galaxies no binning.

The plots are a little interactive, when comparing 2
test files one can click on one of the galaxies highlighting it on both
plots to check, for example, outliers.

The error distribution plot is replaced by the individual galaxy plot, by pressing "h" 
you get back the error plot.

on the metrics plots, by pressing "p" or "t" one can see the results
using zphot or zspec for the binning

If desired all the metrics (base on zphot binning) can be written on outputs file by using --output <root>  flag




**********************************
              NEW
**********************************

Added a fast version, called plot_des_results_fast, it only allows one test1, no validation or second tests. It does 
not produce plots and only provide metrics if --output is set. Uses same flags as the other one and results are the same




Please let me know if you have any issues/comments/suggestions/bugs to improve it at
<mcarras2@illinois.edu>

-----------------------------------------------------
NOTES::
* The metrics for P(z) are slow, be patient. I'll try to speed this up later on
* The number density plot delta_z/error shows the best gaussian fit to the points, for P(z) methods
the mean and standard 1-sigma are calculated for each PDF for this plot and the point to point plot
* N(z) histogram is given for 30 points, its adapted for P(z) 
* On the metrics plots, red lines shows the requierements as discussed on the DC6 Challenge
* Only non zero bins are considered on the metrics
-----------------------------------------------------


Matias Carrasco Kind
